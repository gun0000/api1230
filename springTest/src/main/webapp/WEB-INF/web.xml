<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
	<!-- 한글깨짐 안깨지게 -->
	<filter> 
    	<filter-name>encodingFilter</filter-name> 
    	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> 
	    <init-param> 
	       <param-name>encoding</param-name> 
	       <param-value>UTF-8</param-value> 
	    </init-param> 
	    <init-param> 
	       <param-name>forceEncoding</param-name> 
	       <param-value>true</param-value> 
	    </init-param> 
 	</filter> 
	 <filter-mapping> 
	    <filter-name>encodingFilter</filter-name> 
	    <url-pattern>/*</url-pattern> 
	 </filter-mapping>
	
	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param><!-- 문서전달 -->
		<param-name>contextConfigLocation</param-name>
		<param-value><!-- classpath: 로 경로바꾸기 -->
			classpath:config/root-context.xml
			classpath:config/security.xml
		<!-- /WEB-INF/spring/root-context.xml -->
		</param-value><!-- 빈을 등록하기위한 파일 -->
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener><!-- 통신 감지기 --><!-- <listener>  내용은 Spring에서 어떤 이벤트를 받기 위해서 대기하는 객체라고 이해하면 될 것 같습니다. -->
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet><!--DispatcherServlet 지정  --><!-- 디스패처 서블릿의 dispatch는 "보내다"라는 뜻을 가지고 있습니다. 그리고 이러한 단어를 포함하는 디스패처 서블릿은 HTTP 프로토콜로 들어오는 모든 요청을 가장 먼저 받아 적합한 컨트롤러에 위임해주는 프론트 컨트롤러(Front Controller)라고 정의할 수 있습니다. -->
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value><!-- classpath: 로 경로바꾸기 -->
				classpath:config/servlet-context.xml 
				<!--/WEB-INF/spring/appServlet/servlet-context.xml-->
			</param-value><!--DispatcherServlet이 사용하기위해서 가지는 사용서 -->
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping><!-- 맵핑 /로 되어있는것은 DispatcherServlet받겠다  -->
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.do</url-pattern><!-- .do로 끝나는 url를 디스패쳐서블릿으로 보낸다 -->
	</servlet-mapping>

</web-app>
